{"version":3,"file":"static/js/5654.8ec7b80f.chunk.js","mappings":"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","sources":["../node_modules/eccrypto/browser.js","../node_modules/eth-crypto/node_modules/@ethersproject/random/src.ts/browser-random.ts","../node_modules/eth-crypto/node_modules/@ethersproject/random/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/strings/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/hash/src.ts/message.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/hash/src.ts/id.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/sha2/src.ts/types.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/pbkdf2/src.ts/browser-pbkdf2.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/minimalistic-assert/index.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/inherits/inherits_browser.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/rlp/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/rlp/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/transactions/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/wordlists/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/wordlists/src.ts/wordlist.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/wordlists/src.ts/lang-en.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/wordlists/src.ts/browser-wordlists.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/hdnode/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/hdnode/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/random/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/random/src.ts/browser-random.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/json-wallets/src.ts/utils.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/json-wallets/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/json-wallets/src.ts/keystore.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/json-wallets/src.ts/crowdsale.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/json-wallets/src.ts/inspect.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/node_modules/@ethersproject/json-wallets/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/wallet/src.ts/index.ts","../node_modules/eth-crypto/dist/es/create-identity.js","../node_modules/eth-crypto/node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/eth-crypto/dist/es/util.js","../node_modules/eth-crypto/dist/es/public-key.js","../node_modules/eth-crypto/dist/es/cipher.js","../node_modules/eth-crypto/dist/es/decrypt-with-private-key.js","../node_modules/eth-crypto/dist/es/encrypt-with-public-key.js","../node_modules/eth-crypto/dist/es/public-key-by-private-key.js","../node_modules/eth-crypto/dist/es/recover-public-key.js","../node_modules/eth-crypto/dist/es/recover.js","../node_modules/eth-crypto/dist/es/sign.js","../node_modules/eth-crypto/dist/es/sign-transaction.js","../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/eth-crypto/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/abstract-coder.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/rlp/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/rlp/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/strings/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/hash/src.ts/id.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/address.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/anonymous.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/array.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/boolean.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/bytes.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/fixed-bytes.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/null.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/number.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/string.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/coders/tuple.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/fragments.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/abi-coder.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abi/src.ts/interface.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/node_modules/@ethersproject/transactions/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/contracts/src.ts/index.ts","../node_modules/eth-crypto/dist/es/tx-data-by-compiled.js","../node_modules/eth-crypto/dist/es/calculate-contract-address.js","../node_modules/eth-crypto/node_modules/@ethersproject/solidity/node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/solidity/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/eth-crypto/node_modules/@ethersproject/solidity/node_modules/@ethersproject/strings/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/solidity/node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/eth-crypto/node_modules/@ethersproject/solidity/src.ts/_version.ts","../node_modules/eth-crypto/node_modules/@ethersproject/solidity/src.ts/index.ts","../node_modules/eth-crypto/node_modules/@ethersproject/solidity/node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/eth-crypto/dist/es/hash.js","../node_modules/eth-crypto/dist/es/hex.js","../node_modules/eth-crypto/dist/es/vrs.js","../node_modules/eth-crypto/dist/es/index.js","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/index.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/types.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/src/util.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/account.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/address.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/bytes.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/constants.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/externals.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/hash.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/helpers.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/index.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/internal.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/object.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/signature.ts","../node_modules/eth-crypto/node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/types.ts","../node_modules/eth-crypto/node_modules/bn.js/lib/bn.js","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/account.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/address.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/bytes.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/constants.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/externals.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/hash.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/helpers.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/index.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/internal.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/object.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/signature.ts","../node_modules/eth-crypto/node_modules/ethereumjs-util/src/types.ts"],"sourcesContent":["\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          let firstChunk = cipher.update(data);\n          let secondChunk = cipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          let firstChunk = decipher.update(data);\n          let secondChunk = decipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\nvar derive = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(derive(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nexports.decrypt = function(privateKey, opts) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    assert(macGood, \"Bad MAC\");\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext);\n  }).then(function(msg) {\n    return Buffer.from(new Uint8Array(msg));\n  });\n};\n\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","export const version = \"random/5.6.0\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"bignumber/5.6.2\";\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"address/5.6.1\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.6.1\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.6.2\";\n","export const version = \"strings/5.6.1\";\n","import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","export const version = \"hash/5.6.1\";\n","export enum SupportedAlgorithm { sha256 = \"sha256\", sha512 = \"sha512\" };\n\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","export const version = \"sha2/5.6.1\";\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac, SupportedAlgorithm } from \"@ethersproject/sha2\";\n\nexport function pbkdf2(password: BytesLike, salt: BytesLike, iterations: number, keylen: number, hashAlgorithm: string): string {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen)\n    const block1 = new Uint8Array(salt.length + 4)\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n\n    let r: number;\n    let T: Uint8Array;\n\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, block1));\n\n        if (!hLen) {\n            hLen = U.length\n            T = new Uint8Array(hLen)\n            l = Math.ceil(keylen / hLen)\n            r = keylen - (l - 1) * hLen\n        }\n\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n\n\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(<SupportedAlgorithm>hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++) T[k] ^= U[k]\n        }\n\n\n        const destPos = (i - 1) * hLen\n        const len = (i === l ? r : hLen)\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n\n    return hexlify(DK)\n}\n\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexDataLength, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n        if (hexDataLength(this.privateKey) !== 32) {\n            logger.throwArgumentError(\"invalid private key\", \"privateKey\", \"[[ REDACTED ]]\");\n        }\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.6.2\";\n","export const version = \"rlp/5.6.1\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"transactions/5.6.2\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","export const version = \"wordlists/5.6.1\";\n","\"use strict\";\n\n// This gets overridden by rollup\nconst exportWordlist = false;\n\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\n\nexport abstract class Wordlist {\n    readonly locale: string;\n\n    constructor(locale: string) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n\n    abstract getWord(index: number): string;\n    abstract getWordIndex(word: string): number;\n\n    // Subclasses may override this\n    split(mnemonic: string): Array<string> {\n        return mnemonic.toLowerCase().split(/ +/g)\n    }\n\n    // Subclasses may override this\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    static check(wordlist: Wordlist): string {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) { return \"0x\"; }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n\n    static register(lang: Wordlist, name?: string): void {\n        if (!name) { name = lang.locale; }\n\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = (window as any)\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                         defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            } catch (error) { }\n        }\n    }\n\n}\n\n","\"use strict\";\n\nimport { Wordlist } from \"./wordlist\";\n\n\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\n\nlet wordlist: Array<string> = null;\n\n\nfunction loadWords(lang: Wordlist): void {\n    if (wordlist != null) { return; }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\n\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n\n    getWord(index: number): string {\n        loadWords(this);\n        return wordlist[index];\n    }\n\n    getWordIndex(word: string): number {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\n\nconst langEn = new LangEn();\nWordlist.register(langEn);\n\nexport { langEn };\n","\"use strict\";\n\n// Wordlists\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039/bip-0039-wordlists.md\n\n// Browser; only include English by default\n\nimport { Wordlist } from \"./wordlist\";\n\nimport { langEn as en } from \"./lang-en\";\n\nexport const wordlists: { [ locale: string ]: Wordlist } = {\n  en: en\n}\n","\"use strict\";\n\n// See: https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n// See: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\n\nconst HardenedBit = 0x80000000;\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits);\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return (1 << bits) - 1;\n}\n\nfunction bytes32(value: BigNumber | Uint8Array): string {\n    return hexZeroPad(hexlify(value), 32);\n}\n\nfunction base58check(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nfunction getWordlist(wordlist: string | Wordlist): Wordlist {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n\n    if (typeof(wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n\n    return wordlist;\n}\n\nconst _constructorGuard: any = {};\n\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n\nexport interface Mnemonic {\n    readonly phrase: string;\n    readonly path: string;\n    readonly locale: string;\n};\n\nexport class HDNode implements ExternallyOwnedAccount {\n    readonly privateKey: string;\n    readonly publicKey: string;\n\n    readonly fingerprint: string;\n    readonly parentFingerprint: string;\n\n    readonly address: string;\n\n    readonly mnemonic?: Mnemonic;\n    readonly path: string;\n\n    readonly chainCode: string;\n\n    readonly index: number;\n    readonly depth: number;\n\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard: any, privateKey: string, publicKey: string, parentFingerprint: string, chainCode: string, index: number, depth: number, mnemonicOrPath: Mnemonic | string) {\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        } else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n        defineReadOnly(this, \"chainCode\", chainCode);\n\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n\n        } else if (typeof(mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n\n        } else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        if (this.depth >= 256) { throw new Error(\"Depth too large!\"); }\n\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\": \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([ \"0x00\", this.privateKey ]): this.publicKey),\n        ]));\n    }\n\n    neuter(): HDNode {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n\n    private _derive(index: number): HDNode {\n        if (index > 0xffffffff) { throw new Error(\"invalid index - \" + String(index)); }\n\n        // Base path\n        let path = this.path;\n        if (path) { path += \"/\" + (index & ~HardenedBit); }\n\n        const data = new Uint8Array(37);\n\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n\n            // Hardened path\n            if (path) { path += \"'\"; }\n\n        } else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n\n        // The private key\n        let ki: string = null\n\n        // The public key\n        let Ki: string = null;\n\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        } else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n\n        let mnemonicOrPath: Mnemonic | string = path;\n\n        const srcMnemonic =  this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n\n    derivePath(path: string): HDNode {\n        const components = path.split(\"/\");\n\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n\n        if (components[0] === \"m\") { components.shift(); }\n\n        let result: HDNode = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(HardenedBit + index);\n            } else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) { throw new Error(\"invalid path index - \" + component); }\n                result = result._derive(index);\n            } else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n\n        return result;\n    }\n\n\n    static _fromSeed(seed: BytesLike, mnemonic: Mnemonic): HDNode {\n        const seedArray: Uint8Array = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) { throw new Error(\"invalid seed\"); }\n\n        const I: Uint8Array = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n\n    static fromMnemonic(mnemonic: string, password?: string, wordlist?: string | Wordlist): HDNode {\n\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n\n    static fromSeed(seed: BytesLike): HDNode {\n        return HDNode._fromSeed(seed, null);\n    }\n\n    static fromExtendedKey(extendedKey: string): HDNode {\n        const bytes = Base58.decode(extendedKey);\n\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\n\nexport function mnemonicToSeed(mnemonic: string, password?: string): string {\n    if (!password) { password = \"\"; }\n\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\n\nexport function mnemonicToEntropy(mnemonic: string, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    logger.checkNormalize();\n\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) { throw new Error(\"invalid mnemonic\"); }\n\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) { throw new Error(\"invalid mnemonic\"); }\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nexport function entropyToMnemonic(entropy: BytesLike, wordlist?: string | Wordlist): string {\n    wordlist = getWordlist(wordlist);\n\n    entropy = arrayify(entropy);\n\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nexport function isValidMnemonic(mnemonic: string, wordlist?: Wordlist): boolean {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getAccountPath(index: number): string {\n    if (typeof(index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${ index }'/0/0`;\n}\n","export const version = \"hdnode/5.6.2\";\n","export const version = \"random/5.6.1\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal(): any {\n  if (typeof self !== 'undefined') { return self; }\n  if (typeof window !== 'undefined') { return window; }\n  if (typeof global !== 'undefined') { return global; }\n  throw new Error('unable to locate global object');\n};\n\nconst anyGlobal = getGlobal();\n\nlet crypto: any = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n\n    logger.warn(\"WARNING: Missing strong random number source\");\n\n    crypto = {\n        getRandomValues: function(buffer: Uint8Array): Uint8Array {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\n\nexport function randomBytes(length: number): Uint8Array {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n};\n","\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n","export const version = \"json-wallets/5.6.1\";\n","\"use strict\";\n\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes, BytesLike, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, Mnemonic, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\n\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Exported Types\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\n\nexport interface _KeystoreAccount {\n    address: string;\n    privateKey: string;\n    mnemonic?: Mnemonic;\n\n    _isKeystoreAccount: boolean;\n}\n\nexport class KeystoreAccount extends Description<_KeystoreAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: Mnemonic;\n\n    readonly _isKeystoreAccount: boolean;\n\n    isKeystoreAccount(value: any): value is KeystoreAccount {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\n\nexport type ProgressCallback = (percent: number) => void;\n\nexport type EncryptOptions = {\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\nfunction _decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): Uint8Array {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"))\n        const counter = new aes.Counter(iv);\n\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n\n    return null;\n}\n\nfunction _getAccount(data: any, key: Uint8Array): KeystoreAccount {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n\n    const mnemonicKey = key.slice(32, 64);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") { check = \"0x\" + check; }\n\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n\n    const account: _KeystoreAccount = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n\n            account.mnemonic = node.mnemonic;\n\n        } catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n\n    return new KeystoreAccount(account);\n}\n\ntype ScryptFunc<T> = (pw: Uint8Array, salt: Uint8Array, n: number, r: number, p: number, dkLen: number, callback?: ProgressCallback) => T;\ntype Pbkdf2Func<T> = (pw: Uint8Array, salt: Uint8Array, c: number, dkLen: number, prfFunc: string) => T;\n\nfunction pbkdf2Sync(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Uint8Array {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction pbkdf2(passwordBytes: Uint8Array, salt: Uint8Array, count: number, dkLen: number, prfFunc: string): Promise<Uint8Array> {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\n\nfunction _computeKdfKey<T>(data: any, password: Bytes | string, pbkdf2Func: Pbkdf2Func<T>, scryptFunc: ScryptFunc<T>, progressCallback?: ProgressCallback): T {\n    const passwordBytes = getPassword(password);\n\n    const kdf = searchPath(data, \"crypto/kdf\");\n\n    if (kdf && typeof(kdf) === \"string\") {\n        const throwError = function(name: string, value: any): never {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        }\n\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n\n            // Check for all required parameters\n            if (!N || !r || !p) { throwError(\"kdf\", kdf); }\n\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) { throwError(\"N\", N); }\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n\n            let prfFunc: string = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            } else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            } else {\n                throwError(\"prf\", prf);\n            }\n\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) { throwError(\"dklen\", dkLen); }\n\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\nexport function decryptSync(json: string, password: Bytes | string): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\n\nexport async function decrypt(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const key = await _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n    return _getAccount(data, key);\n}\n\n\nexport function encrypt(account: ExternallyOwnedAccount, password: Bytes | string, options?: EncryptOptions, progressCallback?: ProgressCallback): Promise<string> {\n\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n\n    } catch (e) {\n        return Promise.reject(e);\n    }\n\n    // The options are optional, so adjust the call as needed\n    if (typeof(options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) { options = {}; }\n\n    const privateKey: Uint8Array = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n\n    let entropy: Uint8Array = null\n    let path: string = null;\n    let locale: string = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n\n    let client = options.client;\n    if (!client) { client = \"ethers.js\"; }\n\n    // Check/generate the salt\n    let salt: Uint8Array = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    } else {\n        salt = randomBytes(32);;\n    }\n\n    // Override initialization vector\n    let iv: Uint8Array = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) { throw new Error(\"invalid iv\"); }\n    } else {\n       iv = randomBytes(16);\n    }\n\n    // Override the uuid\n    let uuidRandom: Uint8Array = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) { throw new Error(\"invalid uuid\"); }\n    } else {\n        uuidRandom = randomBytes(16);\n    }\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]))\n\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data: { [key: string]: any } = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                               zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                               zpad(now.getUTCDate(), 2) + \"T\" +\n                               zpad(now.getUTCHours(), 2) + \"-\" +\n                               zpad(now.getUTCMinutes(), 2) + \"-\" +\n                               zpad(now.getUTCSeconds(), 2) + \".0Z\"\n                              );\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n\n        return JSON.stringify(data);\n    });\n}\n","\"use strict\";\n\nimport aes from \"aes-js\";\n\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, Bytes } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\n\nexport interface _CrowdsaleAccount {\n    address: string;\n    privateKey: string;\n\n    _isCrowdsaleAccount: boolean;\n}\n\nexport class CrowdsaleAccount extends Description<_CrowdsaleAccount> implements ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n    readonly mnemonic?: string;\n    readonly path?: string;\n\n    readonly _isCrowdsaleAccount: boolean;\n\n    isCrowdsaleAccount(value: any): value is CrowdsaleAccount {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    const data = JSON.parse(json);\n\n    password = getPassword(password);\n\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    const seedHexBytes = toUtf8Bytes(seedHex);\n\n    const privateKey = keccak256(seedHexBytes);\n\n    return new CrowdsaleAccount ({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\n\n\nexport function isCrowdsaleWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    return (data.encseed && data.ethaddr);\n}\n\nexport function isKeystoreWallet(json: string): boolean {\n    let data: any = null;\n    try {\n        data = JSON.parse(json);\n    } catch (error) { return false; }\n\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\n\nexport function getJsonWalletAddress(json: string): string {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        } catch (error) { return null; }\n    }\n\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        } catch (error) { return null; }\n    }\n\n    return null;\n}\n\n","\"use strict\";\n\nimport { Bytes } from \"@ethersproject/bytes\";\nimport { ExternallyOwnedAccount } from \"@ethersproject/abstract-signer\";\n\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore, EncryptOptions, ProgressCallback } from \"./keystore\";\n\nfunction decryptJsonWallet(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<ExternallyOwnedAccount> {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) { progressCallback(0); }\n        const account = decryptCrowdsale(json, password)\n        if (progressCallback) { progressCallback(1); }\n        return Promise.resolve(account);\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\n\nfunction decryptJsonWalletSync(json: string, password: Bytes | string): ExternallyOwnedAccount {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password)\n    }\n\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n\n    throw new Error(\"invalid JSON wallet\");\n}\n\nexport {\n    decryptCrowdsale,\n\n    decryptKeystore,\n    decryptKeystoreSync,\n    encryptKeystore,\n\n    isCrowdsaleWallet,\n    isKeystoreWallet,\n    getJsonWalletAddress,\n\n    decryptJsonWallet,\n    decryptJsonWalletSync,\n\n    ProgressCallback,\n    EncryptOptions,\n};\n","export const version = \"wallet/5.6.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider, TransactionRequest } from \"@ethersproject/abstract-provider\";\nimport { ExternallyOwnedAccount, Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { arrayify, Bytes, BytesLike, concat, hexDataSlice, isHexString, joinSignature, SignatureLike } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic, Mnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore, ProgressCallback } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize, UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Wordlist } from \"@ethersproject/wordlists\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction isAccount(value: any): value is ExternallyOwnedAccount {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\n\nfunction hasMnemonic(value: any): value is { mnemonic: Mnemonic } {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\n\nexport class Wallet extends Signer implements ExternallyOwnedAccount, TypedDataSigner {\n\n    readonly address: string;\n    readonly provider: Provider;\n\n    // Wrapping the _signingKey and _mnemonic in a getter function prevents\n    // leaking the private key in console.log; still, be careful! :)\n    readonly _signingKey: () => SigningKey;\n    readonly _mnemonic: () => Mnemonic;\n\n    constructor(privateKey: BytesLike | ExternallyOwnedAccount | SigningKey, provider?: Provider) {\n        logger.checkNew(new.target, Wallet);\n\n        super();\n\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => (\n                    {\n                        phrase: srcMnemonic.phrase,\n                        path: srcMnemonic.path || defaultPath,\n                        locale: srcMnemonic.locale || \"en\"\n                    }\n                ));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            } else {\n                defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            }\n\n\n        } else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => (<SigningKey>privateKey));\n\n            } else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof(privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n\n            defineReadOnly(this, \"_mnemonic\", (): Mnemonic => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    get mnemonic(): Mnemonic { return this._mnemonic(); }\n    get privateKey(): string { return this._signingKey().privateKey; }\n    get publicKey(): string { return this._signingKey().publicKey; }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    connect(provider: Provider): Wallet {\n        return new Wallet(this, provider);\n    }\n\n    signTransaction(transaction: TransactionRequest): Promise<string> {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n\n            const signature = this._signingKey().signDigest(keccak256(serialize(<UnsignedTransaction>tx)));\n            return serialize(<UnsignedTransaction>tx, signature);\n        });\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            if (this.provider == null) {\n                logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"resolveName\",\n                    value: name\n                });\n            }\n            return this.provider.resolveName(name);\n        });\n\n        return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n    }\n\n    encrypt(password: Bytes | string, options?: any, progressCallback?: ProgressCallback): Promise<string> {\n        if (typeof(options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n\n        if (progressCallback && typeof(progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n\n        if (!options) { options = {}; }\n\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n\n\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options?: any): Wallet {\n        let entropy: Uint8Array = randomBytes(16);\n\n        if (!options) { options = { }; }\n\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([ entropy, options.extraEntropy ])), 0, 16));\n        }\n\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n\n    static fromEncryptedJson(json: string, password: Bytes | string, progressCallback?: ProgressCallback): Promise<Wallet> {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n\n    static fromEncryptedJsonSync(json: string, password: Bytes | string): Wallet {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n\n    static fromMnemonic(mnemonic: string, path?: string, wordlist?: Wordlist): Wallet {\n        if (!path) { path = defaultPath; }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\n\nexport function verifyMessage(message: Bytes | string, signature: SignatureLike): string {\n    return recoverAddress(hashMessage(message), signature);\n}\n\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n","import { utils as ethersUtils, Wallet } from 'ethers';\nimport { stripHexPrefix } from 'ethereumjs-util';\nvar MIN_ENTROPY_SIZE = 128;\nvar keccak256 = ethersUtils.keccak256;\n/**\n * create a privateKey from the given entropy or a new one\n * @param  {Buffer} entropy\n * @return {string}\n */\n\nexport function createPrivateKey(entropy) {\n  if (entropy) {\n    if (!Buffer.isBuffer(entropy)) throw new Error('EthCrypto.createPrivateKey(): given entropy is no Buffer');\n    if (Buffer.byteLength(entropy, 'utf8') < MIN_ENTROPY_SIZE) throw new Error('EthCrypto.createPrivateKey(): Entropy-size must be at least ' + MIN_ENTROPY_SIZE);\n    var outerHex = keccak256(entropy);\n    return outerHex;\n  } else {\n    var innerHex = keccak256(ethersUtils.concat([ethersUtils.randomBytes(32), ethersUtils.randomBytes(32)]));\n    var middleHex = ethersUtils.concat([ethersUtils.concat([ethersUtils.randomBytes(32), innerHex]), ethersUtils.randomBytes(32)]);\n\n    var _outerHex = keccak256(middleHex);\n\n    return _outerHex;\n  }\n}\n/**\n * creates a new object with\n * private-, public-Key and address\n * @param {Buffer?} entropy if provided, will use that as single random-source\n */\n\nexport default function createIdentity(entropy) {\n  var privateKey = createPrivateKey(entropy);\n  var wallet = new Wallet(privateKey);\n  var identity = {\n    privateKey: privateKey,\n    // remove trailing '0x04'\n    publicKey: stripHexPrefix(wallet.publicKey).slice(2),\n    address: wallet.address\n  };\n  return identity;\n}","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export function removeLeading0x(str) {\n  if (str.startsWith('0x')) return str.substring(2);else return str;\n}\nexport function addLeading0x(str) {\n  if (!str.startsWith('0x')) return '0x' + str;else return str;\n}\nexport function uint8ArrayToHex(arr) {\n  return Buffer.from(arr).toString('hex');\n}\nexport function hexToUnit8Array(str) {\n  return new Uint8Array(Buffer.from(str, 'hex'));\n}","import { publicKeyConvert } from 'secp256k1';\nimport { pubToAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { hexToUnit8Array, uint8ArrayToHex, addLeading0x } from './util';\nexport function compress(startsWith04) {\n  // add trailing 04 if not done before\n  var testBuffer = Buffer.from(startsWith04, 'hex');\n  if (testBuffer.length === 64) startsWith04 = '04' + startsWith04;\n  return uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith04), true));\n}\nexport function decompress(startsWith02Or03) {\n  // if already decompressed an not has trailing 04\n  var testBuffer = Buffer.from(startsWith02Or03, 'hex');\n  if (testBuffer.length === 64) startsWith02Or03 = '04' + startsWith02Or03;\n  var decompressed = uint8ArrayToHex(publicKeyConvert(hexToUnit8Array(startsWith02Or03), false)); // remove trailing 04\n\n  decompressed = decompressed.substring(2);\n  return decompressed;\n}\n/**\n * generates the ethereum-adress of the publicKey\n * We create the checksum-adress which is case-sensitive\n * @returns {string} address\n */\n\nexport function toAddress(publicKey) {\n  // normalize key\n  publicKey = decompress(publicKey);\n  var addressBuffer = pubToAddress(toBuffer(addLeading0x(publicKey)));\n  var checkSumAdress = toChecksumAddress(addLeading0x(addressBuffer.toString('hex')));\n  return checkSumAdress;\n}","import { compress, decompress } from './public-key';\nexport function stringify(cipher) {\n  if (typeof cipher === 'string') return cipher; // use compressed key because it's smaller\n\n  var compressedKey = compress(cipher.ephemPublicKey);\n  var ret = Buffer.concat([Buffer.from(cipher.iv, 'hex'), // 16bit\n  Buffer.from(compressedKey, 'hex'), // 33bit\n  Buffer.from(cipher.mac, 'hex'), // 32bit\n  Buffer.from(cipher.ciphertext, 'hex') // var bit\n  ]);\n  return ret.toString('hex');\n}\nexport function parse(str) {\n  if (typeof str !== 'string') return str;\n  var buf = Buffer.from(str, 'hex');\n  var ret = {\n    iv: buf.toString('hex', 0, 16),\n    ephemPublicKey: buf.toString('hex', 16, 49),\n    mac: buf.toString('hex', 49, 81),\n    ciphertext: buf.toString('hex', 81, buf.length)\n  }; // decompress publicKey\n\n  ret.ephemPublicKey = '04' + decompress(ret.ephemPublicKey);\n  return ret;\n}","import { decrypt } from 'eccrypto';\nimport { parse } from './cipher';\nimport { removeLeading0x } from './util';\nexport default function decryptWithPrivateKey(privateKey, encrypted) {\n  encrypted = parse(encrypted); // remove trailing '0x' from privateKey\n\n  var twoStripped = removeLeading0x(privateKey);\n  var encryptedBuffer = {\n    iv: Buffer.from(encrypted.iv, 'hex'),\n    ephemPublicKey: Buffer.from(encrypted.ephemPublicKey, 'hex'),\n    ciphertext: Buffer.from(encrypted.ciphertext, 'hex'),\n    mac: Buffer.from(encrypted.mac, 'hex')\n  };\n  return decrypt(Buffer.from(twoStripped, 'hex'), encryptedBuffer).then(function (decryptedBuffer) {\n    return decryptedBuffer.toString();\n  });\n}","import { encrypt } from 'eccrypto';\nimport { decompress } from './public-key';\nexport default function encryptWithPublicKey(publicKey, message, opts) {\n  // ensure its an uncompressed publicKey\n  publicKey = decompress(publicKey); // re-add the compression-flag\n\n  var pubString = '04' + publicKey;\n  return encrypt(Buffer.from(pubString, 'hex'), Buffer.from(message), opts ? opts : {}).then(function (encryptedBuffers) {\n    var encrypted = {\n      iv: encryptedBuffers.iv.toString('hex'),\n      ephemPublicKey: encryptedBuffers.ephemPublicKey.toString('hex'),\n      ciphertext: encryptedBuffers.ciphertext.toString('hex'),\n      mac: encryptedBuffers.mac.toString('hex')\n    };\n    return encrypted;\n  });\n}","import { privateToPublic, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\n/**\n * Generate publicKey from the privateKey.\n * This creates the uncompressed publicKey,\n * where 04 has stripped from left\n * @returns {string}\n */\n\nexport default function publicKeyOfPrivateKey(privateKey) {\n  privateKey = addLeading0x(privateKey);\n  var publicKeyBuffer = privateToPublic(toBuffer(privateKey));\n  return publicKeyBuffer.toString('hex');\n}","import { ecdsaRecover } from 'secp256k1';\nimport { removeLeading0x, hexToUnit8Array, uint8ArrayToHex } from './util';\n/**\n * returns the publicKey for the privateKey with which the messageHash was signed\n * @param  {string} signature\n * @param  {string} hash\n * @return {string} publicKey\n */\n\nexport default function recoverPublicKey(signature, hash) {\n  signature = removeLeading0x(signature); // split into v-value and sig\n\n  var sigOnly = signature.substring(0, signature.length - 2); // all but last 2 chars\n\n  var vValue = signature.slice(-2); // last 2 chars\n\n  var recoveryNumber = vValue === '1c' ? 1 : 0;\n  var pubKey = uint8ArrayToHex(ecdsaRecover(hexToUnit8Array(sigOnly), recoveryNumber, hexToUnit8Array(removeLeading0x(hash)), false)); // remove trailing '04'\n\n  pubKey = pubKey.slice(2);\n  return pubKey;\n}","import recoverPublicKey from './recover-public-key';\nimport { toAddress as addressByPublicKey } from './public-key';\n/**\n * returns the adress with which the messageHash was signed\n * @param  {string} sigString\n * @param  {string} hash\n * @return {string} address\n */\n\nexport default function recover(sigString, hash) {\n  var pubkey = recoverPublicKey(sigString, hash);\n  var address = addressByPublicKey(pubkey);\n  return address;\n}","import { ecdsaSign as secp256k1_sign } from 'secp256k1';\nimport { addLeading0x, removeLeading0x } from './util';\n/**\n * signs the given message\n * we do not use sign from eth-lib because the pure secp256k1-version is 90% faster\n * @param  {string} privateKey\n * @param  {string} hash\n * @return {string} hexString\n */\n\nexport default function sign(privateKey, hash) {\n  hash = addLeading0x(hash);\n  if (hash.length !== 66) throw new Error('EthCrypto.sign(): Can only sign hashes, given: ' + hash);\n  var sigObj = secp256k1_sign(new Uint8Array(Buffer.from(removeLeading0x(hash), 'hex')), new Uint8Array(Buffer.from(removeLeading0x(privateKey), 'hex')));\n  var recoveryId = sigObj.recid === 1 ? '1c' : '1b';\n  var newSignature = '0x' + Buffer.from(sigObj.signature).toString('hex') + recoveryId;\n  return newSignature;\n}","import { Transaction } from '@ethereumjs/tx';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport { toAddress as addressByPublicKey } from './public-key';\nexport default function signTransaction(rawTx, privateKey) {\n  var txOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // check if privateKey->address matches rawTx.from\n  var publicKey = publicKeyByPrivateKey(privateKey);\n  var address = addressByPublicKey(publicKey);\n  if (address != rawTx.from) throw new Error('EthCrypto.signTransaction(): rawTx.from does not match the address of the privateKey');\n  var privateKeyBuffer = Buffer.from(privateKey.replace(/^.{2}/g, ''), 'hex');\n  var tx = Transaction.fromTxData(rawTx, txOptions);\n  var signedTx = tx.sign(privateKeyBuffer);\n  var serializedTx = signedTx.serialize().toString('hex');\n  return serializedTx;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"bignumber/5.6.2\";\n","export const version = \"abi/5.6.4\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nexport interface Result extends ReadonlyArray<any> {\n    readonly [key: string]: any;\n}\n\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n\n    _throwError(message: string, value: any): void {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\nexport class Writer {\n    readonly wordSize: number;\n\n    _data: Array<Uint8Array>;\n    _dataLength: number;\n    _padding: Uint8Array;\n\n    constructor(wordSize?: number) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [ ];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n\n    get data(): string {\n        return hexConcat(this._data);\n    }\n    get length(): number { return this._dataLength; }\n\n    _writeData(data: Uint8Array): number {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this._writeData(concat(writer._data));\n    }\n\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([ bytes, this._padding.slice(paddingOffset) ])\n        }\n        return this._writeData(bytes);\n    }\n\n    _getValue(value: BigNumberish): Uint8Array {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([ this._padding.slice(bytes.length % this.wordSize), bytes ]);\n        }\n        return bytes;\n    }\n\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value: BigNumberish): number {\n        return this._writeData(this._getValue(value));\n    }\n\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value: BigNumberish) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\n\nexport class Reader {\n    readonly wordSize: number;\n    readonly allowLoose: boolean;\n\n    readonly _data: Uint8Array;\n    readonly _coerceFunc: CoerceFunc;\n\n    _offset: number;\n\n    constructor(data: BytesLike, wordSize?: number, coerceFunc?: CoerceFunc, allowLoose?: boolean) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n\n        this._offset = 0;\n    }\n\n    get data(): string { return hexlify(this._data); }\n    get consumed(): number { return this._offset; }\n\n    // The default Coerce function\n    static coerce(name: string, value: any): any {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) { value =  value.toNumber(); }\n        return value;\n    }\n\n    coerce(name: string, value: any): any {\n        if (this._coerceFunc) { return this._coerceFunc(name, value); }\n        return Reader.coerce(name, value);\n    }\n\n    _peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            } else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength)\n    }\n\n    subReader(offset: number): Reader {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    readValue(): BigNumber {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","export const version = \"rlp/5.6.1\";\n","\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { arrayify, BytesLike, hexlify, isBytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    if (!isBytesLike(object)) {\n        logger.throwArgumentError(\"RLP object must be BytesLike\", \"object\", object);\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(arrayify(object));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nexport function encode(object: any): string {\n    return hexlify(_encode(object));\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            logger.throwError(\"child data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    if (data.length === 0) {\n        logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n    }\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data short segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data long segment too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            logger.throwError(\"data array too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            logger.throwError(\"data too short\", Logger.errors.BUFFER_OVERRUN, { });\n        }\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\n\nexport function decode(data: BytesLike): any {\n    const bytes = arrayify(data);\n    const decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        logger.throwArgumentError(\"invalid rlp data\", \"data\", data);\n    }\n    return decoded.result;\n}\n\n","export const version = \"address/5.6.1\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","export const version = \"strings/5.6.1\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, value: string): number {\n        try {\n            value = getAddress(value)\n        } catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\n\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = null;\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\nexport function unpack(reader: Reader, coders: Array<Coder>): Result {\n    let values: any = [];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) { throw error; }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) { accum[name] = 0; }\n            accum[name]++;\n        }\n        return accum;\n    }, <{ [ name: string ]: number }>{ });\n\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder: Coder, index: number) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) { return; }\n\n        if (name === \"length\") { name = \"_length\"; }\n\n        if (values[name] != null) { return; }\n\n        const value = values[index];\n\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        } else {\n            values[name] = value;\n        }\n    });\n\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n\n    return Object.freeze(values);\n}\n\n\nexport class ArrayCoder extends Coder {\n    readonly coder: Coder;\n    readonly length: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n\n        this.coder = coder;\n        this.length = length;\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, value: Array<any>): number {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders = [];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, value: boolean): number {\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n\n","\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n","\"use strict\";\n\nimport { arrayify, BytesLike, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    readonly size: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, value: BytesLike): number {\n        let data = arrayify(value);\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes([ ]);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class NumberCoder extends Coder {\n    readonly size: number;\n    readonly signed: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        this.size = size;\n        this.signed = signed;\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, value: BigNumberish): number {\n        let v = BigNumber.from(value);\n\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        } else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n\n        return writer.writeValue(v);\n    }\n\n    decode(reader: Reader): any {\n        let value = reader.readValue().mask(this.size * 8);\n\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n\n        return reader.coerce(this.name, value);\n    }\n}\n\n","\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n","\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport interface JsonFragmentType {\n    readonly name?: string;\n    readonly indexed?: boolean;\n    readonly type?: string;\n    readonly internalType?: any; // @TODO: in v6 reduce type\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\nexport interface JsonFragment {\n    readonly name?: string;\n    readonly type?: string;\n\n    readonly anonymous?: boolean;\n\n    readonly payable?: boolean;\n    readonly constant?: boolean;\n    readonly stateMutability?: string;\n\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    readonly gas?: string;\n};\n\nconst _constructorGuard = { };\n\n// AST Node parser state\ntype ParseState = {\n    allowArray?: boolean,\n    allowName?: boolean,\n    allowParams?: boolean,\n    allowType?: boolean,\n    readArray?: boolean,\n};\n\n// AST Node\ntype ParseNode = {\n    parent?: any,\n    type?: string,\n    name?: string,\n    state?: ParseState,\n    indexed?: boolean,\n    components?: Array<ParseNode>\n};\n\nlet ModifiersBytes: { [ name: string ]: boolean } = { calldata: true, memory: true, storage: true };\nlet ModifiersNest: { [ name: string ]: boolean } = { calldata: true, memory: true };\nfunction checkModifier(type: string, name: string): boolean {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) { return true; }\n    } else if (type === \"address\") {\n        if (name === \"payable\") { return true; }\n    } else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) { return true; }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param: string, allowIndexed: boolean): ParseNode {\n\n    let originalParam = param;\n    function throwError(i: number) {\n        logger.throwArgumentError(`unexpected character at position ${ i }`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n\n    function newNode(parent: ParseNode): ParseNode {\n        let node: ParseNode = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) { node.indexed = false; }\n        return node\n    }\n\n    let parent: ParseNode = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                } else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [ newNode(node) ];\n                node = node.components[0];\n                break;\n\n            case \")\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let child = node;\n                node = node.parent;\n                if (!node) { throwError(i); }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n\n            case \",\":\n                delete node.state;\n\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) { throwError(i); }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n\n                if (checkModifier(node.type, node.name)) { node.name = \"\"; }\n\n                node.type = verifyType(node.type);\n\n                let sibling: ParseNode = newNode(node.parent);\n                 //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n\n            // Hit a space...\n            case \" \":\n\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) { throwError(i); }\n                            if (node.indexed) { throwError(i); }\n                            node.indexed = true;\n                            node.name = \"\";\n                        } else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        } else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n\n                break;\n\n            case \"[\":\n                if (!node.state.allowArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n\n            case \"]\":\n                if (!node.state.readArray) { throwError(i); }\n\n                node.type += c;\n\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                } else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                } else if (node.state.readArray) {\n                    node.type += c;\n                } else {\n                    throwError(i);\n               }\n        }\n    }\n\n    if (node.parent) { logger.throwArgumentError(\"unexpected eof\", \"param\", param); }\n\n    delete parent.state;\n\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) { throwError(originalParam.length - 7); }\n        if (node.indexed) { throwError(originalParam.length - 7); }\n        node.indexed = true;\n        node.name = \"\";\n    } else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n\n    parent.type = verifyType(parent.type);\n\n    return parent;\n}\n\nfunction populate(object: any, params: any) {\n    for (let key in params) { defineReadOnly(object, key, params[key]); }\n}\n\nexport const FormatTypes: { [ name: string ]: string } = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n\n    // JSON-format a la Solidity\n    json: \"json\"\n});\n\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nexport class ParamType {\n\n    // The local name of the parameter (of null if unbound)\n    readonly name: string;\n\n    // The fully qualified type (e.g. \"address\", \"tuple(address)\", \"uint256[3][]\"\n    readonly type: string;\n\n    // The base type (e.g. \"address\", \"tuple\", \"array\")\n    readonly baseType: string;\n\n    // Indexable Paramters ONLY (otherwise null)\n    readonly indexed: boolean;\n\n    // Tuples ONLY: (otherwise null)\n    //  - sub-components\n    readonly components: Array<ParamType>;\n\n    // Arrays ONLY: (otherwise null)\n    //  - length of the array (-1 for dynamic length)\n    //  - child type\n    readonly arrayLength: number;\n    readonly arrayChildren: ParamType;\n\n    readonly _isParamType: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) { logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new ParamType()\"\n        }); }\n        populate(this, params);\n\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        } else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\": this.type)\n            });\n        }\n\n        this._isParamType = true;\n\n        Object.freeze(this);\n    }\n\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            let result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\": String(this.arrayLength)) + \"]\";\n        } else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === FormatTypes.full) ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    static from(value: string | JsonFragmentType | ParamType, allowIndexed?: boolean): ParamType {\n        if (typeof(value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragmentType | ParamType): ParamType {\n        if (ParamType.isParamType(value)) { return value; }\n\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null: !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject): null)\n        });\n    }\n\n    static fromString(value: string, allowIndexed?: boolean): ParamType {\n        function ParamTypify(node: ParseNode): ParamType {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n\n    static isParamType(value: any): value is ParamType {\n        return !!(value != null && value._isParamType);\n    }\n};\n\nfunction parseParams(value: string, allowIndex: boolean): Array<ParamType> {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\n\ntype TypeCheck<T> = { -readonly [ K in keyof T ]: T[K] };\n\ninterface _Fragment {\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: ReadonlyArray<ParamType>;\n}\n\nexport abstract class Fragment {\n\n    readonly type: string;\n    readonly name: string;\n    readonly inputs: Array<ParamType>;\n\n    readonly _isFragment: boolean;\n\n    constructor(constructorGuard: any, params: any) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n\n        this._isFragment = true;\n\n        Object.freeze(this);\n    }\n\n    abstract format(format?: string): string;\n\n    static from(value: Fragment | JsonFragment | string): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        if (typeof(value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n\n        return Fragment.fromObject(value);\n    }\n\n    static fromObject(value: Fragment | JsonFragment): Fragment {\n        if (Fragment.isFragment(value)) { return value; }\n\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n\n    static fromString(value: string): Fragment {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n\n        if (value.split(\" \")[0] === \"event\") {\n           return EventFragment.fromString(value.substring(5).trim());\n        } else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        } else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        } else if (value.split(\" \")[0] === \"error\") {\n           return ErrorFragment.fromString(value.substring(5).trim());\n        }\n\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n\n    static isFragment(value: any): value is Fragment {\n        return !!(value && value._isFragment);\n    }\n}\n\ninterface _EventFragment extends _Fragment {\n    readonly anonymous: boolean;\n}\n\nexport class EventFragment extends Fragment {\n    readonly anonymous: boolean;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: EventFragment | JsonFragment | string): EventFragment {\n        if (typeof(value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n\n    static fromObject(value: JsonFragment | EventFragment): EventFragment {\n        if (EventFragment.isEventFragment(value)) { return value; }\n\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_EventFragment> = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n\n        return new EventFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): EventFragment {\n\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch(modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n\n    static isEventFragment(value: any): value is EventFragment {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\n\nfunction parseGas(value: string, params: any): string {\n    params.gas = null;\n\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n\n    return value;\n}\n\nfunction parseModifiers(value: string, params: any): void {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\n\ntype StateInputValue = {\n    constant?: boolean;\n    payable?: boolean;\n    stateMutability?: string;\n    type?: string;\n};\n\ntype StateOutputValue = {\n    constant: boolean;\n    payable: boolean;\n    stateMutability: string;\n};\n\nfunction verifyState(value: StateInputValue): StateOutputValue {\n    let result: any = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n\n    } else if (value.payable != null) {\n        result.payable = !!value.payable;\n\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n\n        result.constant = !!value.constant;\n\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        } else {\n            result.stateMutability = (result.payable ? \"payable\": \"nonpayable\");\n        }\n\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n\n    } else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\": \"payable\");\n\n    } else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n\n    return result;\n}\n\ninterface _ConstructorFragment extends _Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n}\n\nexport class ConstructorFragment extends Fragment {\n    stateMutability: string;\n    payable: boolean;\n    gas?: BigNumber;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n\n        let result = \"constructor(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n\n        return result.trim();\n    }\n\n    static from(value: ConstructorFragment | JsonFragment | string): ConstructorFragment {\n        if (typeof(value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ConstructorFragment | JsonFragment): ConstructorFragment {\n        if (ConstructorFragment.isConstructorFragment(value)) { return value; }\n\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n\n        const params: TypeCheck<_ConstructorFragment> = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): ConstructorFragment {\n        let params: any = { type: \"constructor\" };\n\n        value = parseGas(value, params);\n\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n\n        params.inputs = parseParams(parens[2].trim(), false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        return ConstructorFragment.fromObject(params);\n    }\n\n    static isConstructorFragment(value: any): value is ConstructorFragment {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\n\ninterface _FunctionFragment extends _ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n}\n\nexport class FunctionFragment extends ConstructorFragment {\n    constant: boolean;\n    outputs?: Array<ParamType>;\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber(): undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            } else if (this.constant) {\n                result += \"view \";\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map(\n                    (output) => output.format(format)\n                ).join(\", \") + \") \";\n            }\n\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n\n        return result.trim();\n    }\n\n    static from(value: FunctionFragment | JsonFragment | string): FunctionFragment {\n        if (typeof(value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n\n    static fromObject(value: FunctionFragment | JsonFragment): FunctionFragment {\n        if (FunctionFragment.isFunctionFragment(value)) { return value; }\n\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n\n        let state = verifyState(value);\n\n        const params: TypeCheck<_FunctionFragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject): [ ]),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas): null)\n        };\n\n        return new FunctionFragment(_constructorGuard, params);\n    }\n\n    static fromString(value: string): FunctionFragment {\n        let params: any = { type: \"function\" };\n        value = parseGas(value, params);\n\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        parseModifiers(parens[3].trim(), params);\n\n        // We have outputs\n        if (comps.length > 1) {\n           let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        } else {\n            params.outputs = [ ];\n        }\n\n        return FunctionFragment.fromObject(params);\n    }\n\n    static isFunctionFragment(value: any): value is FunctionFragment {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n\n//export class StructFragment extends Fragment {\n//}\n\nfunction checkForbidden(fragment: ErrorFragment): ErrorFragment {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${ sig } error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\n\nexport class ErrorFragment extends Fragment {\n\n    format(format?: string): string {\n        if (!format) { format = FormatTypes.sighash; }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        let result = \"\";\n\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n\n        result += this.name + \"(\" + this.inputs.map(\n            (input) => input.format(format)\n        ).join((format === FormatTypes.full) ? \", \": \",\") + \") \";\n\n        return result.trim();\n    }\n\n    static from(value: ErrorFragment | JsonFragment | string): ErrorFragment {\n        if (typeof(value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n\n    static fromObject(value: ErrorFragment | JsonFragment): ErrorFragment {\n        if (ErrorFragment.isErrorFragment(value)) { return value; }\n\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n\n        const params: TypeCheck<_Fragment> = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject): [])\n        };\n\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n\n    static fromString(value: string): ErrorFragment {\n        let params: any = { type: \"error\" };\n\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n\n        params.name = parens[1].trim();\n        if (params.name) { verifyIdentifier(params.name); }\n\n        params.inputs = parseParams(parens[2], false);\n\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n\n    static isErrorFragment(value: any): value is ErrorFragment {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\n\nfunction verifyType(type: string): string {\n\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    } else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n\n    // @TODO: more verification\n\n    return type;\n}\n\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value: string): string {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${ value }\"`, \"value\", value);\n    }\n    return value;\n}\n\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\n\nfunction splitNesting(value: string): Array<any> {\n    value = value.trim();\n\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        } else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            } else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) { result.push(accum); }\n\n    return result;\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\n\nimport { ParamType } from \"./fragments\";\n\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nexport type CoerceFunc = (type: string, value: any) => any;\n\nexport class AbiCoder {\n    readonly coerceFunc: CoerceFunc;\n\n    constructor(coerceFunc?: CoerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n\n    _getCoder(param: ParamType): Coder {\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n\n    _getWordSize(): number { return 32; }\n\n    _getReader(data: Uint8Array, allowLoose?: boolean): Reader {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n\n    _getWriter(): Writer {\n        return new Writer(this._getWordSize());\n    }\n\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\n\nexport const defaultAbiCoder: AbiCoder = new AbiCoder();\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\"\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\n\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, JsonFragment, ParamType } from \"./fragments\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport { checkResultErrors, Result };\n\nexport class LogDescription extends Description<LogDescription> {\n    readonly eventFragment: EventFragment;\n    readonly name: string;\n    readonly signature: string;\n    readonly topic: string;\n    readonly args: Result\n}\n\nexport class TransactionDescription extends Description<TransactionDescription> {\n    readonly functionFragment: FunctionFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n    readonly value: BigNumber;\n}\n\nexport class ErrorDescription extends Description<ErrorDescription> {\n    readonly errorFragment: ErrorFragment;\n    readonly name: string;\n    readonly args: Result;\n    readonly signature: string;\n    readonly sighash: string;\n}\n\nexport class Indexed extends Description<Indexed> {\n    readonly hash: string;\n    readonly _isIndexed: boolean;\n\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n}\n\nconst BuiltinErrors: Record<string, { signature: string, inputs: Array<string>, name: string, reason?: boolean }> = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [ \"string\" ], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [ \"uint256\" ] }\n}\n\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    readonly fragments: ReadonlyArray<Fragment>;\n\n    readonly errors: { [ name: string ]: ErrorFragment };\n    readonly events: { [ name: string ]: EventFragment };\n    readonly functions: { [ name: string ]: FunctionFragment };\n    readonly structs: { [ name: string ]: any };\n\n    readonly deploy: ConstructorFragment;\n\n    readonly _abiCoder: AbiCoder;\n\n    readonly _isInterface: boolean;\n\n    constructor(fragments: string | ReadonlyArray<Fragment | JsonFragment | string>) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n\n        defineReadOnly(this, \"_abiCoder\", getStatic<() => AbiCoder>(new.target, \"getAbiCoder\")());\n\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"errors\", { });\n        defineReadOnly(this, \"events\", { });\n        defineReadOnly(this, \"structs\", { });\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket: { [ name: string ]: Fragment } = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", <ConstructorFragment>fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n\n            bucket[signature] = fragment;\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n\n    format(format?: string): string | Array<string> {\n        if (!format) { format = FormatTypes.full; }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n             return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n\n        return abi;\n    }\n\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder(): AbiCoder {\n        return defaultAbiCoder;\n    }\n\n    static getAddress(address: string): string {\n        return getAddress(address);\n    }\n\n    static getSighash(fragment: ErrorFragment | FunctionFragment): string {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n\n    static getEventTopic(eventFragment: EventFragment): string {\n        return id(eventFragment.format());\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash: string): FunctionFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n\n            return this.functions[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic: string): EventFragment {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n\n            return this.events[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash: string): ErrorFragment {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\"/* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            } else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n\n            return this.errors[matching[0]];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment: ErrorFragment | FunctionFragment | string): string {\n        if (typeof(fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            } catch (error) {\n                try {\n                    fragment = this.getError(<string>fragment);\n                } catch (_) {\n                    throw error;\n                }\n            }\n        }\n\n        return getStatic<(f: ErrorFragment | FunctionFragment) => string>(this.constructor, \"getSighash\")(fragment);\n    }\n\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment: EventFragment | string): string {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        return getStatic<(e: EventFragment) => string>(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this._abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this._abiCoder.encode(params, values)\n    }\n\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${ fragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        const bytes = arrayify(data);\n\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${ functionFragment.name }.`, \"data\", hexlify(bytes));\n        }\n\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [ ])\n        ]));\n    }\n\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        let bytes = arrayify(data);\n\n        let reason: string = null;\n        let message = \"\";\n        let errorArgs: Result = null;\n        let errorName: string = null;\n        let errorSignature: string = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                } catch (error) { }\n                break;\n\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) { reason = errorArgs[0]; }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${ JSON.stringify(errorArgs[0]) }`;\n                    } else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${ errorArgs[0] }`;\n                    }\n                } else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    } catch (error) { }\n                }\n                break;\n            }\n        }\n\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || [ ]));\n    }\n\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment: EventFragment, values: ReadonlyArray<any>): Array<string | Array<string>> {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            })\n        }\n\n        let topics: Array<string | Array<string>> = [];\n        if (!eventFragment.anonymous) { topics.push(this.getEventTopic(eventFragment)); }\n\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            }\n\n            if (param.type.match(/^u?int/)) {\n                value = BigNumber.from(value).toHexString();\n            }\n\n            // Check addresses are valid\n            if (param.type === \"address\") { this._abiCoder.encode( [ \"address\" ], [ value ]); }\n            return hexZeroPad(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            let param = eventFragment.inputs[index];\n\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(eventFragment: EventFragment, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this._abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this._abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n\n        let indexed: Array<ParamType> = [];\n        let nonIndexed: Array<ParamType> = [];\n        let dynamic: Array<boolean> = [];\n\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)): null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n        let result: (Array<any> & { [ key: string ]: any }) = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n\n                } else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n\n                } else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    } catch (error) {\n                        result[index] = error;\n                    }\n                }\n            } else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                } catch (error) {\n                    result[index] = error;\n                }\n            }\n\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${ JSON.stringify(param.name) }`, value); }\n                    });\n                } else {\n                    result[param.name] = value;\n                }\n            }\n        });\n\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${ i }`, value); }\n                });\n            }\n        }\n\n        return Object.freeze(result);\n    }\n\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx: { data: string, value?: BigNumberish }): TransactionDescription {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log: { topics: Array<string>, data: string}): LogDescription {\n        let fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n\n    parseError(data: BytesLike): ErrorDescription {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase())\n\n        if (!fragment) { return null; }\n\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n\n\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n    static isInterface(value: any): value is Interface {\n        return !!(value && value._isInterface);\n    }\n}\n\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) { }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        // @TODO: What makes snese to do? The v is too big\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) { }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.6.1\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","export const version = \"abstract-signer/5.6.2\";\n","export const version = \"transactions/5.6.2\";\n","export const version = \"contracts/5.6.0\";\n","\"use strict\";\n\nimport { checkResultErrors, EventFragment, Fragment, FunctionFragment, Indexed, Interface, JsonFragment, LogDescription, ParamType, Result } from \"@ethersproject/abi\";\nimport { Block, BlockTag, Filter, FilterByBlockHash, Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, AccessListish } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nconst logger = new Logger(version);\n\nexport interface Overrides {\n    gasLimit?: BigNumberish | Promise<BigNumberish>;\n    gasPrice?: BigNumberish | Promise<BigNumberish>;\n    maxFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    maxPriorityFeePerGas?: BigNumberish | Promise<BigNumberish>;\n    nonce?: BigNumberish | Promise<BigNumberish>;\n    type?: number;\n    accessList?: AccessListish;\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport interface PayableOverrides extends Overrides {\n    value?: BigNumberish | Promise<BigNumberish>;\n}\n\nexport interface CallOverrides extends PayableOverrides {\n    blockTag?: BlockTag | Promise<BlockTag>;\n    from?: string | Promise<string>;\n}\n\n// @TODO: Better hierarchy with: (in v6)\n//  - abstract-provider:TransactionRequest\n//  - transactions:Transaction\n//  - transaction:UnsignedTransaction\n\nexport interface PopulatedTransaction {\n    to?: string;\n    from?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumber;\n    gasPrice?: BigNumber;\n\n    data?: string;\n    value?: BigNumber;\n    chainId?: number;\n\n    type?: number;\n    accessList?: AccessList;\n\n    maxFeePerGas?: BigNumber;\n    maxPriorityFeePerGas?: BigNumber;\n\n    customData?: Record<string, any>;\n    ccipReadEnabled?: boolean;\n};\n\nexport type EventFilter = {\n    address?: string;\n    topics?: Array<string|Array<string>>;\n};\n\n\nexport type ContractFunction<T = any> = (...args: Array<any>) => Promise<T>;\n\n\n// The (n + 1)th parameter passed to contract event callbacks\nexport interface Event extends Log {\n\n    // The event name\n    event?: string;\n\n    // The event signature\n    eventSignature?: string;\n\n    // The parsed arguments to the event\n    args?: Result;\n\n    // If parsing the arguments failed, this is the error\n    decodeError?: Error;\n\n    // A function that can be used to decode event data and topics\n    decode?: (data: string, topics?: Array<string>) => any;\n\n    // A function that will remove the listener responsible for this event (if any)\n    removeListener: () => void;\n\n    // Get blockchain details about this event's block and transaction\n    getBlock: () => Promise<Block>;\n    getTransaction: () => Promise<TransactionResponse>;\n    getTransactionReceipt: () => Promise<TransactionReceipt>;\n}\n\nexport interface ContractReceipt extends TransactionReceipt {\n    events?: Array<Event>;\n}\n\nexport interface ContractTransaction extends TransactionResponse {\n    wait(confirmations?: number): Promise<ContractReceipt>;\n}\n\n///////////////////////////////\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n}\n\nasync function resolveName(resolver: Signer | Provider, nameOrPromise: string | Promise<string>): Promise<string> {\n    const name = await nameOrPromise;\n\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n    }\n\n    // If it is already an address, just use it (after adding checksum)\n    try {\n        return getAddress(name);\n    } catch (error) { }\n\n    if (!resolver) {\n        logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resolveName\"\n        });\n    }\n\n    const address = await resolver.resolveName(name);\n\n    if (address == null) {\n        logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n    }\n\n    return address;\n}\n\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nasync function resolveAddresses(resolver: Signer | Provider, value: any, paramType: ParamType | Array<ParamType>): Promise<any> {\n    if (Array.isArray(paramType)) {\n        return await Promise.all(paramType.map((paramType, index) => {\n            return resolveAddresses(\n                resolver,\n                ((Array.isArray(value)) ? value[index]: value[paramType.name]),\n                paramType\n            );\n        }));\n    }\n\n    if (paramType.type === \"address\") {\n        return await resolveName(resolver, value);\n    }\n\n    if (paramType.type === \"tuple\") {\n        return await resolveAddresses(resolver, value, paramType.components);\n    }\n\n    if (paramType.baseType === \"array\") {\n        if (!Array.isArray(value)) {\n            return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                argument: \"value\",\n                value\n            }));\n        }\n        return await Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n    }\n\n    return value;\n}\n\nasync function populateTransaction(contract: Contract, fragment: FunctionFragment, args: Array<any>): Promise<PopulatedTransaction> {\n    // If an extra argument is given, it is overrides\n    let overrides: CallOverrides = { };\n    if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n        overrides = shallowCopy(args.pop());\n    }\n\n    // Make sure the parameter count matches\n    logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n\n    // Populate \"from\" override (allow promises)\n    if (contract.signer) {\n        if (overrides.from) {\n            // Contracts with a Signer are from the Signer's frame-of-reference;\n            // but we allow overriding \"from\" if it matches the signer\n            overrides.from = resolveProperties({\n                override: resolveName(contract.signer, overrides.from),\n                signer: contract.signer.getAddress()\n            }).then(async (check) => {\n                if (getAddress(check.signer) !== check.override) {\n                    logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"overrides.from\"\n                    });\n                }\n\n                return check.override;\n            });\n\n        } else {\n            overrides.from = contract.signer.getAddress();\n        }\n\n    } else if (overrides.from) {\n        overrides.from = resolveName(contract.provider, overrides.from);\n\n    //} else {\n        // Contracts without a signer can override \"from\", and if\n        // unspecified the zero address is used\n        //overrides.from = AddressZero;\n    }\n\n    // Wait for all dependencies to be resolved (prefer the signer over the provider)\n    const resolved = await resolveProperties({\n        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n        address: contract.resolvedAddress,\n        overrides: (resolveProperties(overrides) || { })\n    });\n\n    // The ABI coded transaction\n    const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n    const tx: PopulatedTransaction = {\n      data: data,\n      to: resolved.address\n    };\n\n    // Resolved Overrides\n    const ro = resolved.overrides;\n\n    // Populate simple overrides\n    if (ro.nonce != null) { tx.nonce = BigNumber.from(ro.nonce).toNumber(); }\n    if (ro.gasLimit != null) { tx.gasLimit = BigNumber.from(ro.gasLimit); }\n    if (ro.gasPrice != null) { tx.gasPrice = BigNumber.from(ro.gasPrice); }\n    if (ro.maxFeePerGas != null) { tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas); }\n    if (ro.maxPriorityFeePerGas != null) { tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas); }\n    if (ro.from != null) { tx.from = ro.from; }\n\n    if (ro.type != null) { tx.type = ro.type; }\n    if (ro.accessList != null) { tx.accessList = accessListify(ro.accessList); }\n\n    // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n    if (tx.gasLimit == null && fragment.gas != null) {\n        // Compute the intrinsic gas cost for this transaction\n        // @TODO: This is based on the yellow paper as of Petersburg; this is something\n        // we may wish to parameterize in v6 as part of the Network object. Since this\n        // is always a non-nil to address, we can ignore G_create, but may wish to add\n        // similar logic to the ContractFactory.\n        let intrinsic = 21000;\n        const bytes = arrayify(data);\n        for (let i = 0; i < bytes.length; i++) {\n            intrinsic += 4;\n            if (bytes[i]) { intrinsic += 64; }\n        }\n        tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n    }\n\n    // Populate \"value\" override\n    if (ro.value) {\n        const roValue = BigNumber.from(ro.value);\n        if (!roValue.isZero() && !fragment.payable) {\n            logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides.value\",\n                value: overrides.value\n            });\n        }\n        tx.value = roValue;\n    }\n\n    if (ro.customData) {\n        tx.customData = shallowCopy(ro.customData);\n    }\n\n    if (ro.ccipReadEnabled) {\n        tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n    }\n\n    // Remove the overrides\n    delete overrides.nonce;\n    delete overrides.gasLimit;\n    delete overrides.gasPrice;\n    delete overrides.from;\n    delete overrides.value;\n\n    delete overrides.type;\n    delete overrides.accessList;\n\n    delete overrides.maxFeePerGas;\n    delete overrides.maxPriorityFeePerGas;\n\n    delete overrides.customData;\n    delete overrides.ccipReadEnabled;\n\n    // Make sure there are no stray overrides, which may indicate a\n    // typo or using an unsupported key.\n    const leftovers = Object.keys(overrides).filter((key) => ((<any>overrides)[key] != null));\n    if (leftovers.length) {\n        logger.throwError(`cannot override ${ leftovers.map((l) => JSON.stringify(l)).join(\",\") }`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"overrides\",\n            overrides: leftovers\n        });\n    }\n\n    return tx;\n}\n\n\nfunction buildPopulate(contract: Contract, fragment: FunctionFragment): ContractFunction<PopulatedTransaction> {\n    return function(...args: Array<any>): Promise<PopulatedTransaction> {\n        return populateTransaction(contract, fragment, args);\n    };\n}\n\nfunction buildEstimate(contract: Contract, fragment: FunctionFragment): ContractFunction<BigNumber> {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return async function(...args: Array<any>): Promise<BigNumber> {\n        if (!signerOrProvider) {\n            logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"estimateGas\"\n            })\n        }\n\n        const tx = await populateTransaction(contract, fragment, args);\n        return await signerOrProvider.estimateGas(tx);\n    };\n}\n\nfunction addContractWait(contract: Contract, tx: TransactionResponse) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations?: number) => {\n        return wait(confirmations).then((receipt: ContractReceipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event: Event = (<Event>deepCopy(log));\n                let parsed: LogDescription = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                } catch (e){ }\n\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data: BytesLike, topics?: Array<any>) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n\n                // Useful operations\n                event.removeListener = () => { return contract.provider; }\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                }\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                }\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                }\n\n                return event;\n            });\n\n            return receipt;\n        });\n    };\n}\n\nfunction buildCall(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    const signerOrProvider = (contract.signer || contract.provider);\n\n    return async function(...args: Array<any>): Promise<any> {\n        // Extract the \"blockTag\" override if present\n        let blockTag = undefined;\n        if (args.length === fragment.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            const overrides = shallowCopy(args.pop());\n            if (overrides.blockTag != null) {\n                blockTag = await overrides.blockTag;\n            }\n            delete overrides.blockTag;\n            args.push(overrides);\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed(blockTag);\n        }\n\n        // Call a node and get the result\n        const tx = await populateTransaction(contract, fragment, args);\n        const result = await signerOrProvider.call(tx, blockTag);\n\n        try {\n            let value = contract.interface.decodeFunctionResult(fragment, result);\n            if (collapseSimple && fragment.outputs.length === 1) {\n                value = value[0];\n            }\n            return value;\n\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) {\n                error.address = contract.address;\n                error.args = args;\n                error.transaction = tx;\n            }\n            throw error;\n         }\n    };\n}\n\nfunction buildSend(contract: Contract, fragment: FunctionFragment): ContractFunction<TransactionResponse> {\n    return async function(...args: Array<any>): Promise<TransactionResponse> {\n        if (!contract.signer) {\n            logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"sendTransaction\"\n            })\n        }\n\n        // If the contract was just deployed, wait until it is mined\n        if (contract.deployTransaction != null) {\n            await contract._deployed();\n        }\n\n        const txRequest = await populateTransaction(contract, fragment, args);\n\n        const tx = await contract.signer.sendTransaction(txRequest);\n\n        // Tweak the tx.wait so the receipt has extra properties\n        addContractWait(contract, tx);\n\n        return tx;\n    };\n}\n\nfunction buildDefault(contract: Contract, fragment: FunctionFragment, collapseSimple: boolean): ContractFunction {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\n\nfunction getEventTag(filter: EventFilter): string {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\"): \"\");\n}\n\nclass RunningEvent {\n    readonly tag: string;\n    readonly filter: EventFilter;\n    private _listeners: Array<{ listener: Listener, once: boolean }>;\n\n    constructor(tag: string, filter: EventFilter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [ ];\n    }\n\n    addListener(listener: Listener, once: boolean): void {\n        this._listeners.push({ listener: listener, once: once });\n    }\n\n    removeListener(listener: Listener): void {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) { return true; }\n            done = true;\n            return false;\n        });\n    }\n\n    removeAllListeners(): void {\n        this._listeners = [];\n    }\n\n    listeners(): Array<Listener> {\n        return this._listeners.map((i) => i.listener);\n    }\n\n    listenerCount(): number {\n        return this._listeners.length;\n    }\n\n    run(args: Array<any>): number {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n\n            const argsCopy = args.slice();\n\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n\n        return listenerCount;\n    }\n\n    prepareEvent(event: Event): void {\n    }\n\n    // Returns the array that will be applied to an emit\n    getEmit(event: Event): Array<any> {\n        return [ event ];\n    }\n}\n\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n\n\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n    readonly fragment: EventFragment;\n\n    constructor(address: string, contractInterface: Interface, fragment: EventFragment, topics?: Array<string|Array<string>>) {\n        const filter: EventFilter = {\n            address: address\n        }\n\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) { logger.throwArgumentError(\"topic mismatch\", \"topics\", topics); }\n            filter.topics = topics.slice();\n        } else {\n            filter.topics = [ topic ];\n        }\n\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n\n        event.decode = (data: BytesLike, topics?: Array<string>) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        } catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n\n    getEmit(event: Event): Array<any> {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) { throw errors[0].error; }\n\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    readonly address: string;\n    readonly interface: Interface;\n\n    constructor(address: string, contractInterface: Interface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n\n    prepareEvent(event: Event): void {\n        super.prepareEvent(event);\n\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n\n            event.decode = (data: BytesLike, topics?: Array<string>) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n\n            event.args = parsed.args;\n        } catch (error) {\n            // No matching event\n        }\n    }\n}\n\nexport type ContractInterface = string | ReadonlyArray<Fragment | JsonFragment | string> | Interface;\n\ntype InterfaceFunc = (contractInterface: ContractInterface) => Interface;\n\n\nexport class BaseContract {\n    readonly address: string;\n    readonly interface: Interface;\n\n    readonly signer: Signer;\n    readonly provider: Provider;\n\n    readonly functions: { [ name: string ]: ContractFunction };\n\n    readonly callStatic: { [ name: string ]: ContractFunction };\n    readonly estimateGas: { [ name: string ]: ContractFunction<BigNumber> };\n    readonly populateTransaction: { [ name: string ]: ContractFunction<PopulatedTransaction> };\n\n    readonly filters: { [ name: string ]: (...args: Array<any>) => EventFilter };\n\n    // This will always be an address. This will only differ from\n    // address if an ENS name was used in the constructor\n    readonly resolvedAddress: Promise<string>;\n\n    // This is only set if the contract was created with a call to deploy\n    readonly deployTransaction: TransactionResponse;\n\n    _deployedPromise: Promise<Contract>;\n\n    // A list of RunningEvents to track listeners for each event tag\n    _runningEvents: { [ eventTag: string ]: RunningEvent };\n\n    // Wrapped functions to call emit and allow deregistration from the provider\n    _wrappedEmits: { [ eventTag: string ]: (...args: Array<any>) => void };\n\n    constructor(addressOrName: string, contractInterface: ContractInterface, signerOrProvider?: Signer | Provider) {\n        logger.checkNew(new.target, Contract);\n\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        } else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        } else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        } else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n\n        defineReadOnly(this, \"callStatic\", { });\n        defineReadOnly(this, \"estimateGas\", { });\n        defineReadOnly(this, \"functions\", { });\n        defineReadOnly(this, \"populateTransaction\", { });\n\n        defineReadOnly(this, \"filters\", { });\n\n        {\n            const uniqueFilters: { [ name: string ]: Array<string> } = { };\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args: Array<any>) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                   }\n                });\n                if (!uniqueFilters[event.name]) { uniqueFilters[event.name] = [ ]; }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                } else {\n                    logger.warn(`Duplicate definition of ${ name } (${ filters.join(\", \")})`);\n                }\n            });\n        }\n\n        defineReadOnly(this, \"_runningEvents\", { });\n        defineReadOnly(this, \"_wrappedEmits\", { });\n\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        } else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            } catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n\n        const uniqueNames: { [ name: string ]: Array<string> } = { };\n        const uniqueSignatures: { [ signature: string ]: boolean } = { };\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${ JSON.stringify(signature) }`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${ name }`]) { uniqueNames[`%${ name }`] = [ ]; }\n                uniqueNames[`%${ name }`].push(signature);\n            }\n\n            if ((<Contract>this)[signature] == null) {\n                defineReadOnly<any, any>(this, signature, buildDefault(this, fragment, true));\n            }\n\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) { return; }\n\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n\n            const signature = signatures[0];\n\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if ((<Contract>this)[name] == null) {\n                    defineReadOnly(<Contract>this, name, (<Contract>this)[signature]);\n                }\n            } catch (e) { }\n\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n\n    static getContractAddress(transaction: { from: string, nonce: BigNumberish }): string {\n        return getContractAddress(transaction);\n    }\n\n    static getInterface(contractInterface: ContractInterface): Interface {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n\n    // @TODO: Allow timeout?\n    deployed(): Promise<Contract> {\n        return this._deployed();\n    }\n\n    _deployed(blockTag?: BlockTag): Promise<Contract> {\n        if (!this._deployedPromise) {\n\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n\n            } else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n\n        return this._deployedPromise;\n    }\n\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n\n    fallback(overrides?: TransactionRequest): Promise<TransactionResponse> {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" })\n        }\n\n        const tx: Deferrable<TransactionRequest> = shallowCopy(overrides || {});\n\n        [\"from\", \"to\"].forEach(function(key) {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider: Signer | Provider | string): Contract {\n        if (typeof(signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n\n        const contract = new (<{ new(...args: any[]): Contract }>(this.constructor))(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n\n        return contract;\n    }\n\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName: string): Contract {\n        return new (<{ new(...args: any[]): Contract }>(this.constructor))(addressOrName, this.interface, this.signer || this.provider);\n    }\n\n    static isIndexed(value: any): value is Indexed {\n        return Indexed.isIndexed(value);\n    }\n\n    private _normalizeRunningEvent(runningEvent: RunningEvent): RunningEvent {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n         }\n         return runningEvent\n    }\n\n    private _getRunningEvent(eventName: EventFilter | string): RunningEvent {\n        if (typeof(eventName) === \"string\") {\n\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName)\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof(topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            } catch (error) { }\n\n            // Filter by the unknown topichash\n            const filter: EventFilter = {\n                address: this.address,\n                topics: eventName.topics\n            }\n\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n\n    _checkRunningEvents(runningEvent: RunningEvent): void {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent: RunningEvent, log: Log, listener: Listener): Event {\n        const event = <Event>deepCopy(log);\n\n        event.removeListener = () => {\n            if (!listener) { return; }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); }\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); }\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); }\n\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n\n        return event;\n    }\n\n    private _addEventListener(runningEvent: RunningEvent, listener: Listener, once: boolean): void {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" })\n        }\n\n        runningEvent.addListener(listener, once);\n\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log: Log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    } catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n\n    queryFilter(event: EventFilter, fromBlockOrBlockhash?: BlockTag | string, toBlock?: BlockTag): Promise<Array<Event>> {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n\n        if (typeof(fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            (<FilterByBlockHash>filter).blockHash = fromBlockOrBlockhash;\n        } else {\n             (<Filter>filter).fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash: 0);\n             (<Filter>filter).toBlock = ((toBlock != null) ? toBlock: \"latest\");\n        }\n\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n\n    on(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n\n    once(event: EventFilter | string, listener: Listener): this {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n\n    emit(eventName: EventFilter | string, ...args: Array<any>): boolean {\n        if (!this.provider) { return false; }\n\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventFilter | string): number {\n        if (!this.provider) { return 0; }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n\n    listeners(eventName?: EventFilter | string): Array<Listener> {\n        if (!this.provider) { return []; }\n\n        if (eventName == null) {\n            const result: Array<Listener> = [ ];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener)\n                });\n            }\n            return result;\n        }\n\n        return this._getRunningEvent(eventName).listeners();\n    }\n\n    removeAllListeners(eventName?: EventFilter | string): this {\n        if (!this.provider) { return this; }\n\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n\n        return this;\n    }\n\n    off(eventName: EventFilter | string, listener: Listener): this {\n        if (!this.provider) { return this; }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n\n    removeListener(eventName: EventFilter | string, listener: Listener): this {\n        return this.off(eventName, listener);\n    }\n\n}\n\nexport class Contract extends BaseContract {\n    // The meta-class properties\n    readonly [ key: string ]: ContractFunction | any;\n}\n\nexport class ContractFactory {\n\n    readonly interface: Interface;\n    readonly bytecode: string;\n    readonly signer: Signer;\n\n    constructor(contractInterface: ContractInterface, bytecode: BytesLike | { object: string }, signer?: Signer) {\n\n        let bytecodeHex: string = null;\n\n        if (typeof(bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        } else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        } else if (bytecode && typeof(bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = (<any>bytecode).object;\n        } else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") { bytecodeHex = \"0x\" + bytecodeHex; }\n\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic<InterfaceFunc>(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args: Array<any>): TransactionRequest {\n        let tx: TransactionRequest = { };\n\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof(args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key })\n        });\n\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n\n        return tx\n    }\n\n    async deploy(...args: Array<any>): Promise<Contract> {\n\n        let overrides: any = { };\n\n        // If 1 extra parameter was passed in, it contains overrides\n        if (args.length === this.interface.deploy.inputs.length + 1) {\n            overrides = args.pop();\n        }\n\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n\n        // Resolve ENS names and promises in the arguments\n        const params = await resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n        params.push(overrides);\n\n        // Get the deployment transaction (with optional overrides)\n        const unsignedTx = this.getDeployTransaction(...params);\n\n        // Send the deployment transaction\n        const tx = await this.signer.sendTransaction(unsignedTx);\n\n        const address = getStatic<(tx: TransactionResponse) => string>(this.constructor, \"getContractAddress\")(tx);\n        const contract = getStatic<(address: string, contractInterface: ContractInterface, signer?: Signer) => Contract>(this.constructor, \"getContract\")(address, this.interface, this.signer);\n\n        // Add the modified wait that wraps events\n        addContractWait(contract, tx);\n\n        defineReadOnly(contract, \"deployTransaction\", tx);\n        return contract;\n    }\n\n    attach(address: string): Contract {\n        return (<any>(this.constructor)).getContract(address, this.interface, this.signer);\n    }\n\n    connect(signer: Signer) {\n        return new (<{ new(...args: any[]): ContractFactory }>(this.constructor))(this.interface, this.bytecode, signer);\n    }\n\n    static fromSolidity(compilerOutput: any, signer?: Signer): ContractFactory {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n\n        if (typeof(compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n\n        const abi = compilerOutput.abi;\n\n        let bytecode: any = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, signer);\n    }\n\n    static getInterface(contractInterface: ContractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n\n    static getContractAddress(tx: { from: string, nonce: BytesLike | BigNumber | number }): string {\n        return getContractAddress(tx);\n    }\n\n    static getContract(address: string, contractInterface: ContractInterface, signer?: Signer): Contract {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { ContractFactory } from 'ethers';\nexport default function txDataByCompiled(abi, bytecode, args) {\n  // solc returns a string which is often passed instead of the json\n  if (typeof abi === 'string') abi = JSON.parse(abi); // Construct a Contract Factory\n\n  var factory = new ContractFactory(abi, '0x' + bytecode);\n  var deployTransaction = factory.getDeployTransaction.apply(factory, _toConsumableArray(args));\n  return deployTransaction.data;\n}","import { generateAddress, toChecksumAddress, toBuffer } from 'ethereumjs-util';\nimport { addLeading0x } from './util';\nexport default function calculateContractAddress(creatorAddress, nonce) {\n  var addressBuffer = generateAddress(toBuffer(addLeading0x(creatorAddress)), toBuffer(nonce));\n  var address = addressBuffer.toString('hex');\n  return toChecksumAddress(addLeading0x(address));\n}","export const version = \"bignumber/5.6.2\";\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"strings/5.6.1\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","export const version = \"solidity/5.6.0\";\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\": \"0x00\");\n            if (isArray) { return zeroPad(value, 32); }\n            return arrayify(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\")\n\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type)\n        }\n\n        if (isArray) { size = 256; }\n\n        value = BigNumber.from(value).toTwos(size);\n\n        return zeroPad(value, size / 8);\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type)\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${ type }`, \"value\", value)\n        }\n        if (isArray) { return arrayify((value + Zeros).substring(0, 66)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${ type }`, \"value\", value)\n        }\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n\n    return logger.throwArgumentError(\"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\nexport function pack(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values)\n    }\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\nexport function keccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashKeccak256(pack(types, values));\n}\n\nexport function sha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>) {\n    return hashSha256(pack(types, values));\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","import { utils as ethersUtils } from 'ethers';\nexport function keccak256(params) {\n  var types = [];\n  var values = [];\n\n  if (!Array.isArray(params)) {\n    types.push('string');\n    values.push(params);\n  } else {\n    params.forEach(function (p) {\n      types.push(p.type);\n      values.push(p.value);\n    });\n  }\n\n  return ethersUtils.solidityKeccak256(types, values);\n}\nexport var SIGN_PREFIX = '\\x19Ethereum Signed Message:\\n32';","/**\n * compress/decompress hex-strings to utf16 or base64\n * thx @juvian\n * @link https://stackoverflow.com/a/40471908/3443137\n */\nimport { removeLeading0x, addLeading0x } from './util';\nexport function compress(hex) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  hex = removeLeading0x(hex); // if base64:true, we use our own function because it results in a smaller output\n\n  if (base64 === true) return Buffer.from(hex, 'hex').toString('base64');\n  var string = '';\n\n  while (hex.length % 4 != 0) {\n    // we need it to be multiple of 4\n    hex = '0' + hex;\n  }\n\n  for (var i = 0; i < hex.length; i += 4) {\n    // get char from ascii code which goes from 0 to 65536\n    string += String.fromCharCode(parseInt(hex.substring(i, i + 4), 16));\n  }\n\n  return string;\n}\nexport function decompress(compressedString) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  // if base64:true, we use our own function because it results in a smaller output\n  if (base64 === true) {\n    var ret = Buffer.from(compressedString, 'base64').toString('hex');\n    return addLeading0x(ret);\n  }\n\n  var hex = '';\n\n  for (var i = 0; i < compressedString.length; i++) {\n    // get character ascii code and convert to hexa string, adding necessary 0s\n    hex += ((i == 0 ? '' : '000') + compressedString.charCodeAt(i).toString(16)).slice(-4);\n  }\n\n  hex = hex.toLowerCase();\n  return addLeading0x(hex);\n}","import { utils as ethersUtils } from 'ethers';\n/**\n * split signature-hex into parts\n * @param  {string} hexString\n * @return {{v: string, r: string, s: string}}\n */\n\nexport function fromString(hexString) {\n  var arr = ethersUtils.splitSignature(hexString);\n  return {\n    // convert \"v\" to hex\n    v: \"0x\".concat(arr.v.toString(16)),\n    r: arr.r,\n    s: arr.s\n  };\n}\n/**\n * merge signature-parts to one string\n * @param  {{v: string, r: string, s: string}} sig\n * @return {string} hexString\n */\n\nexport function toString(sig) {\n  return ethersUtils.joinSignature(sig);\n}","import createIdentity from './create-identity';\nimport * as publicKey from './public-key';\nimport decryptWithPrivateKey from './decrypt-with-private-key';\nimport encryptWithPublicKey from './encrypt-with-public-key';\nimport * as cipher from './cipher';\nimport publicKeyByPrivateKey from './public-key-by-private-key';\nimport recover from './recover';\nimport recoverPublicKey from './recover-public-key';\nimport sign from './sign';\nimport signTransaction from './sign-transaction';\nimport txDataByCompiled from './tx-data-by-compiled';\nimport calculateContractAddress from './calculate-contract-address';\nimport * as hash from './hash';\nimport * as hex from './hex';\nimport * as vrs from './vrs';\nimport * as util from './util';\nexport { createIdentity, publicKey, decryptWithPrivateKey, encryptWithPublicKey, cipher, publicKeyByPrivateKey, recover, recoverPublicKey, sign, signTransaction, txDataByCompiled, calculateContractAddress, hash, hex, vrs, util };\nexport default {\n  createIdentity: createIdentity,\n  publicKey: publicKey,\n  decryptWithPrivateKey: decryptWithPrivateKey,\n  encryptWithPublicKey: encryptWithPublicKey,\n  cipher: cipher,\n  publicKeyByPrivateKey: publicKeyByPrivateKey,\n  recover: recover,\n  recoverPublicKey: recoverPublicKey,\n  sign: sign,\n  signTransaction: signTransaction,\n  txDataByCompiled: txDataByCompiled,\n  calculateContractAddress: calculateContractAddress,\n  hash: hash,\n  hex: hex,\n  vrs: vrs,\n  util: util\n};","import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE })\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = {\n      common: this.common,\n    }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE })\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = {\n      common: this.common,\n    }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE })\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = {\n      common: this.common,\n    }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      !v.eqn(0) &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add aditional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n\n  if (vBN.eqn(0) || vBN.eqn(1)) return toType(v, TypeOutput.BN)\n\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n"],"names":["ec","EC","require","browserCrypto","global","crypto","msCrypto","subtle","webkitSubtle","nodeCrypto","EC_GROUP_ORDER","Buffer","from","ZERO32","alloc","assert","condition","message","Error","isValidPrivateKey","privateKey","x","isBuffer","length","compare","randomBytes","size","arr","Uint8Array","getRandomValues","sha512","msg","Promise","resolve","result","createHash","update","digest","getAes","op","iv","key","data","importKey","name","then","cryptoKey","encAlgorithm","cipher","createCipheriv","firstChunk","secondChunk","final","concat","decipher","createDecipheriv","aesCbcEncrypt","aesCbcDecrypt","getPublic","keyFromPrivate","derive","privateKeyA","publicKeyB","keyA","keyB","keyFromPublic","Px","toArray","exports","publicKeyTo","opts","ephemPublicKey","ciphertext","macKey","ephemPrivateKey","hash","encryptionKey","slice","dataToMac","hmac","createHmac","hmacSha256Sign","mac","sig","b1","b2","res","i","equalConstTime","macGood","logger","Logger","anyGlobal","self","window","getGlobal","throwArgumentError","arrayify","warn","buffer","throwError","operation","BN","_BN","_constructorGuard","MAX_SAFE","_warnedToStringRadix","BigNumber","constructorGuard","hex","this","_hex","_isBigNumber","Object","freeze","value","toBigNumber","toBN","fromTwos","toTwos","substring","other","add","sub","isZero","throwFault","div","mul","isNeg","umod","pow","isNegative","and","or","xor","maskn","shln","shrn","eq","lt","lte","gt","gte","toNumber","error","toString","BigInt","e","arguments","type","toHexString","match","toHex","String","anyValue","isBytes","hexlify","isHexString","fault","params","keccak256","sha3","getChecksumAddress","address","chars","toLowerCase","split","expanded","charCodeAt","hashed","toUpperCase","join","ibanLookup","fromCharCode","safeDigits","Math","floor","log10","log","LN10","ibanChecksum","map","c","block","parseInt","checksum","getAddress","UnicodeNormalizationForm","Utf8ErrorReason","Provider","checkAbstract","defineReadOnly","resolveProperties","getBlock","gasPrice","getGasPrice","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","eventName","listener","on","off","_isProvider","allowedTransactionKeys","forwardErrors","Signer","blockTag","_checkProvider","provider","getBalance","getTransactionCount","transaction","checkTransaction","tx","estimateGas","call","populateTransaction","signTransaction","signedTx","sendTransaction","getNetwork","network","chainId","getFeeData","resolveName","indexOf","shallowCopy","all","to","__awaiter","hasEip1559","feeData","nonce","gasLimit","code","getChainId","results","_isSigner","ignoreFunc","reason","offset","bytes","output","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","o","OVERRUN","ignore","replace","OVERLONG","push","toUtf8Bytes","str","form","current","checkNormalize","normalize","c2","pair","hashMessage","id","text","padding","fill","NegativeOne","Zero","One","MaxUint256","hexTrue","hexZeroPad","hexFalse","domainFieldTypes","version","verifyingContract","salt","domainFieldNames","checkString","JSON","stringify","domainChecks","getBaseEncoder","signed","width","boundsUpper","mask","boundsLower","v","padOffset","hexConcat","hexPadRight","encodeType","fields","SupportedAlgorithm","TypedDataEncoder","types","deepCopy","links","parents","subtypes","keys","forEach","uniqueNames","field","baseType","primaryTypes","filter","n","t","checkCircular","found","child","subtype","primaryType","st","sort","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","values","unshift","encodeData","hashStruct","callback","_visit","reduce","accum","domain","domainFields","a","b","EIP712Domain","hashDomain","encode","ensCache","visit","domainValues","domainTypes","typesWithDomain","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","j","base","string","k","_leader","q","TypeError","byte","undefined","reverse","Base58","sha256","computeHmac","algorithm","pbkdf2","password","iterations","keylen","hashAlgorithm","hLen","r","T","l","DK","block1","set","U","ceil","destPos","len","val","equal","utils","zero2","word","enc","Array","isArray","hi","lo","minAssert","minUtils","getNAF","num","w","bits","naf","max","bitLength","ws","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","prototype","parseBytes","intFromLE","BaseCurve","conf","p","red","prime","zero","toRed","one","two","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","index","ja","jb","tmp","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","dbl","create","module","ctor","superCtor","super_","constructor","enumerable","writable","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","s","redSqrt","redAdd","redSub","a0","b0","a1","a2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","yyyy8","d","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","options","defineCurve","defineProperty","get","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonceEnc","pers","persEnc","_init","seed","_update","_hmac","kmac","reseed","addEnc","generate","temp","KeyPair","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPrivate","sign","verify","signature","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","LN2","rlen","slen","toDER","backHalf","rand","hasOwnProperty","nh","keyPair","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","_ec","_curve","getCurve","SigningKey","hexDataLength","p0","publicKey","digestBytes","splitSignature","otherKey","otherKeyPair","computePublicKey","_isSigningKey","compressed","signingKey","arrayifyInteger","object","payload","isBytesLike","TransactionTypes","transactionFields","maxLength","numeric","computeAddress","hexDataSlice","formatNumber","stripZeros","accessSetify","addr","storageKeys","storageKey","accessListify","localeCompare","formatAccessList","_serializeEip1559","accessList","RLP","_serializeEip2930","serialize","checkProperties","raw","fieldInfo","hexPad","pop","_serialize","transactionType","Wordlist","locale","mnemonic","words","wordlist","getWord","getWordIndex","lang","loadWords","check","langEn","LangEn","register","wordlists","en","N","MasterSecret","HardenedBit","getUpperMask","bytes32","base58check","getWordlist","defaultPath","HDNode","parentFingerprint","chainCode","depth","mnemonicOrPath","compressedPublicKey","path","IL","IR","ki","Ki","_addPoint","srcMnemonic","phrase","fingerprint","components","shift","component","_derive","seedArray","entropyToMnemonic","mnemonicToEntropy","_fromSeed","NFKD","mnemonicToSeed","extendedKey","decode","bit","entropyBits","checksumMask","indices","remainingBits","checksumBits","looseArrayify","hexString","zpad","getPassword","NFKC","searchPath","currentChild","comps","matchingChild","uuidV4","hasMnemonic","KeystoreAccount","_isKeystoreAccount","Description","_getAccount","counter","aes","aesCtr","decrypt","_decrypt","mnemonicKey","account","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","node","fromMnemonic","derivePath","argument","pbkdf2Sync","passwordBytes","count","dkLen","prfFunc","_pbkdf2","_computeKdfKey","pbkdf2Func","scryptFunc","progressCallback","kdf","prf","CrowdsaleAccount","_isCrowdsaleAccount","json","ethaddr","encseed","encryptedSeed","aesCbc","seedHex","isCrowdsaleWallet","isKeystoreWallet","decryptJsonWallet","decryptCrowdsale","scrypt","decryptKeystore","reject","decryptJsonWalletSync","decryptKeystoreSync","Wallet","checkNew","isSigningKey","isProvider","_mnemonic","_signingKey","signDigest","joinSignature","_TypedDataEncoder","populated","client","uuidRandom","uuid","derivedKey","macPrefix","encrypt","Crypto","cipherparams","kdfparams","dklen","now","Date","timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","encryptKeystore","extraEntropy","createIdentity","innerHex","ethersUtils","middleHex","createPrivateKey","wallet","stripHexPrefix","removeLeading0x","startsWith","addLeading0x","uint8ArrayToHex","hexToUnit8Array","compress","startsWith04","publicKeyConvert","decompress","startsWith02Or03","decompressed","toAddress","addressBuffer","pubToAddress","toBuffer","toChecksumAddress","compressedKey","ret","decryptWithPrivateKey","encrypted","twoStripped","encryptedBuffer","decryptedBuffer","encryptWithPublicKey","pubString","encryptedBuffers","publicKeyOfPrivateKey","privateToPublic","recoverPublicKey","sigOnly","recoveryNumber","pubKey","ecdsaRecover","recover","sigString","addressByPublicKey","sigObj","secp256k1_sign","recoveryId","recid","rawTx","txOptions","publicKeyByPrivateKey","privateKeyBuffer","Transaction","serializedTx","_arrayLikeToArray","arr2","_toConsumableArray","Symbol","iterator","minLen","test","Coder","localName","dynamic","Writer","wordSize","_data","_dataLength","_padding","writer","_writeData","paddingOffset","_getValue","Reader","coerceFunc","allowLoose","_offset","_coerceFunc","coerce","loose","alignedLength","_peekBytes","readBytes","getContractAddress","Utf8ErrorFuncs","getUtf8CodePoints","onError","extraLength","overlongMask","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8String","codePoint","AddressCoder","_throwError","writeValue","reader","readValue","AnonymousCoder","coder","defaultValue","pack","coders","arrayValues","unique","staticWriter","dynamicWriter","updateFuncs","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","ArrayCoder","defaultChild","checkArgumentCount","BooleanCoder","DynamicBytesCoder","writeBytes","BytesCoder","FixedBytesCoder","NullCoder","NumberCoder","maxUintValue","bounds","StringCoder","TupleCoder","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","populate","FormatTypes","sighash","minimal","full","paramTypeArray","RegExp","ParamType","arrayLength","arrayChildren","fromObject","_isParamType","format","indexed","comp","allowIndexed","fromString","isParamType","verifyType","param","originalParam","newNode","parent","state","allowType","allowParams","allowName","allowArray","sibling","readArray","parseParamType","parseParams","allowIndex","trim","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","gas","parseModifiers","constant","payable","stateMutability","console","verifyState","isConstructorFragment","parens","outputs","isFunctionFragment","returns","checkForbidden","fragment","isErrorFragment","regexIdentifier","paramTypeBytes","paramTypeNumber","defaultAbiCoder","_getCoder","_getWordSize","_getWriter","_getReader","LogDescription","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","wrapAccessError","property","wrap","Interface","fragments","abi","getStatic","bucket","deploy","functions","events","errors","nameOrSignatureOrSighash","getSighash","matching","nameOrSignatureOrTopic","topichash","getEventTopic","getFunction","getError","_","eventFragment","getEvent","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","selector","builtin","method","topics","encodeTopic","dataTypes","dataValues","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","args","topic","decodeEventLog","hexData","errorFragment","_isInterface","VoidSigner","_fail","customData","ccipReadEnabled","resolver","nameOrPromise","resolveAddresses","paramType","makeError","contract","overrides","signer","override","resolvedAddress","resolved","interface","encodeFunctionData","ro","intrinsic","roValue","leftovers","addContractWait","wait","bind","confirmations","receipt","logs","event","parsed","parseLog","eventSignature","removeListener","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","signerOrProvider","deployTransaction","_deployed","decodeFunctionResult","buildDefault","txRequest","buildSend","getEventTag","RunningEvent","tag","_listeners","once","done","item","listenerCount","argsCopy","setTimeout","apply","ErrorRunningEvent","FragmentRunningEvent","contractInterface","decodeError","checkErrors","childPath","checkResultErrors","WildcardRunningEvent","BaseContract","addressOrName","Contract","uniqueFilters","filters","encodeFilterTopics","uniqueSignatures","callStatic","buildPopulate","buildEstimate","signatures","_deployedPromise","getCode","contractAddress","deployed","runningEvent","_runningEvents","_normalizeRunningEvent","emit","_wrappedEmits","_checkRunningEvents","prepareEvent","addListener","wrappedEmit","_wrapEvent","getEmit","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","isInterface","isIndexed","ContractFactory","bytecode","bytecodeHex","encodeDeploy","unsignedTx","getDeployTransaction","getContract","compilerOutput","evm","getInterface","txDataByCompiled","factory","calculateContractAddress","creatorAddress","generateAddress","regexBytes","regexNumber","regexArray","_pack","zeroPad","tight","SIGN_PREFIX","base64","compressedString","vrs","util","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","common_1","Mainnet","DEFAULT_HARDFORK","Istanbul","_type","ethereumjs_util_1","toB","vB","rB","sB","_validateCannotExceedMaxInteger","BaseTransaction","capability","includes","stringError","getBaseFee","isSigned","verifySignature","fee","getDataFee","addn","common","gteHardfork","toCreationAddress","txDataZero","txDataNonZero","cost","isActivatedEIP","dataLength","initCodeCost","imuln","getSenderPublicKey","unpadBuffer","publicToAddress","_errorMsg","hackApplied","supports","types_1","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","_processSignature","splice","chainIdBN","copy","isSupportedChainId","chain","hardfork","forCustomChain","networkId","_a","cannotEqual","entries","_c","bufferToHex","hf","postfix","TRANSACTION_TYPE_BUFFER","padStart","_super","_this","_getCommon","accessListData","util_1","getAccessListData","AccessListJSON","verifyAccessList","eqn","checkMaxInitCodeSize","_b","__extends","FeeMarketEIP1559Transaction","serialized","equals","fromValuesArray","fromSerializedTx","validateNoLeadingZeroes","getDataFeeEIP2930","isFrozen","baseFee","min","bnToUnpaddedBuffer","getMessageToVerifySignature","ecrecover","fromTxData","accessListJSON","getAccessListJSON","bnToHex","errorStr","_getSharedErrorPostfix","baseTransaction_1","AccessListEIP2930Transaction","yParity","default","__exportStar","_validateTxV","chainIdDoubled","muln","_getMessageToSign","rlphash","vBN","numSub","subn","divn","onEIP155BlockOrLater","TransactionFactory","txType","_1","EIP","fromSerializedData","transactionID","_common","isAccessListBuffer","firstItem","Capability","AccessLists","bufferAccessList","isAccessList","newAccessList","storageItems","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","setLengthLeft","slot","accessListStorageKeyCost","accessListAddressCost","slots","balance","stateRoot","codeHash","externals_1","constants_1","_validate","Account","accountData","hexAddress","assertIsString","eip1191ChainId","assertIsHexString","prefix","toType","keccakFromString","isValidAddress","assertIsBuffer","nonceBN","initCode","privateKeyVerify","sanitize","publicKeyVerify","keccak","publicKeyCreate","zeros","zeroAddress","Address","privateToAddress","isBN","toArrayLike","generateAddress2","addressBN","rangeMin","rangeMax","Number","isSafeInteger","intToHex","padToEven","allocUnsafe","setLength","right","first","assertIsArray","intToBuffer","isHexPrefixed","ba","array","baToJSON","arrToBufArr","bufArrToArr","buffer_1","bn_js_1","keccak224","keccak384","keccak512","_sha256","_ripemd160","padded","getBinarySize","arrayContainsArray","toAscii","fromUtf8","fromAscii","getKeys","superset","subset","some","substr","stringValue","allowEmpty","_fields","label","obj_1","getter","setter","allowZero","allowLess","alias","keys_1","calculateSigRecovery","isValidSigRecovery","recovery","rec","ecdsaSign","senderPubKey","vn","ss","bufferToInt","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","TypeOutput","outputType","bn","MAX_SAFE_INTEGER","number","endian","parseHex4Bits","parseHexByte","lowerBound","parseBase","start","end","move","dest","src","left","_initNumber","_initArray","_parseHex","_parseBase","_strip","limbLen","limbPow","total","_iaddn","_move","_expand","_normSign","for","groupSizes","groupBases","out","groupSize","groupBase","modrn","idivn","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","zeroBits","abs","inotn","testn","notn","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","bytesNeeded","bitsLeft","setn","wbit","isub","comb10MulTo","mid","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","io","guessLen13b","conjugate","normalize13b","round","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","isqr","toBitArray","iushln","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","ushln","imaskn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","divmod","positive","dm","half","r2","egcd","A","B","C","D","yp","xp","im","jm","gcd","_invmp","bincn","ucmp","gtn","gten","ltn","lten","Red","ctx","convertTo","_forceRed","convertFrom","redShl","shl","_verify2","redIMul","_verify1","redISqr","sqrt","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","imulK","strip","prev","next","mod3","nOne","lpow","inv","currentLen"],"sourceRoot":""}